hola	IDENTIFICADOR
y	IDENTIFICADOR
:=	OPERADOR
y	IDENTIFICADOR
}	SIMBOLO
y	IDENTIFICADOR
:=	OPERADOR
ident	IDENTIFICADOR
asd	IDENTIFICADOR
4	ENTERO
ggggu	IDENTIFICADOR
22	ENTERO
o	IDENTIFICADOR
0	ENTERO
oo	IDENTIFICADOR
oiu6	IDENTIFICADOR
34	ENTERO
3445	ENTERO
oi445	IDENTIFICADOR
olb5094i	IDENTIFICADOR
,	SIMBOLO
545	ENTERO
}	SIMBOLO
t4	IDENTIFICADOR
5	ENTERO
y45v	IDENTIFICADOR
5	ENTERO
v45	IDENTIFICADOR
6	ENTERO
v45	IDENTIFICADOR
6	ENTERO
vh	IDENTIFICADOR
yh	IDENTIFICADOR
6	ENTERO
h	IDENTIFICADOR
6	ENTERO
h	IDENTIFICADOR
56	ENTERO
V	IDENTIFICADOR
60	ENTERO
04	ENTERO
V40v4V2	IDENTIFICADOR
vijv3	IDENTIFICADOR
rer	IDENTIFICADOR
}	SIMBOLO
e	IDENTIFICADOR
e	IDENTIFICADOR
epokp54k	IDENTIFICADOR
==	OPERADOR
r	IDENTIFICADOR
:=	OPERADOR
9	ENTERO
ef	IDENTIFICADOR
include	IDENTIFICADOR
<	OPERADOR
windows	IDENTIFICADOR
h	IDENTIFICADOR
>	OPERADOR
include	IDENTIFICADOR
<	OPERADOR
iostream	IDENTIFICADOR
>	OPERADOR
include	IDENTIFICADOR
<	OPERADOR
conio	IDENTIFICADOR
h	IDENTIFICADOR
>	OPERADOR
include	IDENTIFICADOR
<	OPERADOR
stdio	IDENTIFICADOR
h	IDENTIFICADOR
>	OPERADOR
define	IDENTIFICADOR
ARRIBA	IDENTIFICADOR
72	ENTERO
define	IDENTIFICADOR
IZQUIERDA	IDENTIFICADOR
75	ENTERO
define	IDENTIFICADOR
DERECHA	IDENTIFICADOR
77	ENTERO
define	IDENTIFICADOR
ABAJO	IDENTIFICADOR
80	ENTERO
define	IDENTIFICADOR
ESC	IDENTIFICADOR
27	ENTERO
define	IDENTIFICADOR
ENTER	IDENTIFICADOR
13	ENTERO
int	RESERVADAS
backcolor	IDENTIFICADOR
0	ENTERO
;	SIMBOLO
int	RESERVADAS
dir	IDENTIFICADOR
0	ENTERO
;	SIMBOLO
int	RESERVADAS
x	IDENTIFICADOR
39	ENTERO
,	SIMBOLO
y	IDENTIFICADOR
22	ENTERO
;	SIMBOLO
int	RESERVADAS
anteriorpx	IDENTIFICADOR
,	SIMBOLO
anteriorpy	IDENTIFICADOR
;	SIMBOLO
char	IDENTIFICADOR
tecla	IDENTIFICADOR
;	SIMBOLO
long	IDENTIFICADOR
int	RESERVADAS
puntos	IDENTIFICADOR
-5	ENTERO
;	SIMBOLO
int	RESERVADAS
vidas	IDENTIFICADOR
3	ENTERO
;	SIMBOLO
void	IDENTIFICADOR
setCColor	IDENTIFICADOR
(	SIMBOLO
int	RESERVADAS
color	IDENTIFICADOR
)	SIMBOLO
{	SIMBOLO
static	IDENTIFICADOR
HANDLE	IDENTIFICADOR
hConsole	IDENTIFICADOR
;	SIMBOLO
hConsole	IDENTIFICADOR
GetStdHandle	IDENTIFICADOR
(	SIMBOLO
STD_OUTPUT_HANDLE	IDENTIFICADOR
)	SIMBOLO
;	SIMBOLO
}	SIMBOLO
int	RESERVADAS
color	IDENTIFICADOR
7	ENTERO
{	SIMBOLO
0	ENTERO
x009	IDENTIFICADOR
,	SIMBOLO
0	ENTERO
x00E	IDENTIFICADOR
,	SIMBOLO
0	ENTERO
x00C	IDENTIFICADOR
,	SIMBOLO
0	ENTERO
x002	IDENTIFICADOR
,	SIMBOLO
0	ENTERO
x00B	IDENTIFICADOR
,	SIMBOLO
0	ENTERO
x005	IDENTIFICADOR
,	SIMBOLO
0	ENTERO
x00F	IDENTIFICADOR
}	SIMBOLO
;	SIMBOLO
void	IDENTIFICADOR
gotoxy	IDENTIFICADOR
(	SIMBOLO
int	RESERVADAS
x	IDENTIFICADOR
,	SIMBOLO
int	RESERVADAS
y	IDENTIFICADOR
)	SIMBOLO
{	SIMBOLO
HANDLE	IDENTIFICADOR
hCon	IDENTIFICADOR
;	SIMBOLO
COORD	IDENTIFICADOR
dwPos	IDENTIFICADOR
;	SIMBOLO
dwPos	IDENTIFICADOR
X	IDENTIFICADOR
x	IDENTIFICADOR
;	SIMBOLO
dwPos	IDENTIFICADOR
Y	IDENTIFICADOR
y	IDENTIFICADOR
;	SIMBOLO
hCon	IDENTIFICADOR
GetStdHandle	IDENTIFICADOR
(	SIMBOLO
STD_OUTPUT_HANDLE	IDENTIFICADOR
)	SIMBOLO
;	SIMBOLO
SetConsoleCursorPosition	IDENTIFICADOR
(	SIMBOLO
hCon	IDENTIFICADOR
,	SIMBOLO
dwPos	IDENTIFICADOR
)	SIMBOLO
;	SIMBOLO
}	SIMBOLO
char	IDENTIFICADOR
mapa	IDENTIFICADOR
50	ENTERO
100	ENTERO
{	SIMBOLO
void	IDENTIFICADOR
pintar_mapa	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
{	SIMBOLO
for	IDENTIFICADOR
(	SIMBOLO
int	RESERVADAS
i	IDENTIFICADOR
0	ENTERO
;	SIMBOLO
i	IDENTIFICADOR
<	OPERADOR
78	ENTERO
;	SIMBOLO
i	IDENTIFICADOR
++	OPERADOR
)	SIMBOLO
{	SIMBOLO
for	IDENTIFICADOR
(	SIMBOLO
int	RESERVADAS
j	IDENTIFICADOR
0	ENTERO
;	SIMBOLO
j	IDENTIFICADOR
<	OPERADOR
30	ENTERO
;	SIMBOLO
j	IDENTIFICADOR
++	OPERADOR
)	SIMBOLO
{	SIMBOLO
gotoxy	IDENTIFICADOR
(	SIMBOLO
i	IDENTIFICADOR
,	SIMBOLO
j	IDENTIFICADOR
)	SIMBOLO
;	SIMBOLO
if	RESERVADAS
(	SIMBOLO
mapaj	IDENTIFICADOR
i	IDENTIFICADOR
==	OPERADOR
X	IDENTIFICADOR
)	SIMBOLO
{	SIMBOLO
setCColor	IDENTIFICADOR
(	SIMBOLO
color	IDENTIFICADOR
0	ENTERO
)	SIMBOLO
;	SIMBOLO
printf	IDENTIFICADOR
(	SIMBOLO
%	OPERADOR
c	IDENTIFICADOR
,	SIMBOLO
205	ENTERO
)	SIMBOLO
;	SIMBOLO
}	SIMBOLO
if	RESERVADAS
(	SIMBOLO
mapa	IDENTIFICADOR
j	IDENTIFICADOR
i	IDENTIFICADOR
==	OPERADOR
)	SIMBOLO
{	SIMBOLO
setCColor	IDENTIFICADOR
(	SIMBOLO
color	IDENTIFICADOR
1	ENTERO
)	SIMBOLO
;	SIMBOLO
printf	IDENTIFICADOR
(	SIMBOLO
%	OPERADOR
c	IDENTIFICADOR
,	SIMBOLO
250	ENTERO
)	SIMBOLO
;	SIMBOLO
}	SIMBOLO
else	RESERVADAS
if	RESERVADAS
(	SIMBOLO
mapa	IDENTIFICADOR
j	IDENTIFICADOR
i	IDENTIFICADOR
==	OPERADOR
Y	IDENTIFICADOR
)	SIMBOLO
{	SIMBOLO
setCColor	IDENTIFICADOR
(	SIMBOLO
color	IDENTIFICADOR
0	ENTERO
)	SIMBOLO
;	SIMBOLO
printf	IDENTIFICADOR
(	SIMBOLO
%	OPERADOR
c	IDENTIFICADOR
,	SIMBOLO
186	ENTERO
)	SIMBOLO
;	SIMBOLO
}	SIMBOLO
else	RESERVADAS
if	RESERVADAS
(	SIMBOLO
mapa	IDENTIFICADOR
j	IDENTIFICADOR
i	IDENTIFICADOR
==	OPERADOR
A	IDENTIFICADOR
)	SIMBOLO
{	SIMBOLO
setCColor	IDENTIFICADOR
(	SIMBOLO
color	IDENTIFICADOR
0	ENTERO
)	SIMBOLO
;	SIMBOLO
printf	IDENTIFICADOR
(	SIMBOLO
%	OPERADOR
c	IDENTIFICADOR
,	SIMBOLO
201	ENTERO
)	SIMBOLO
;	SIMBOLO
}	SIMBOLO
else	RESERVADAS
if	RESERVADAS
(	SIMBOLO
mapa	IDENTIFICADOR
j	IDENTIFICADOR
i	IDENTIFICADOR
==	OPERADOR
B	IDENTIFICADOR
)	SIMBOLO
{	SIMBOLO
setCColor	IDENTIFICADOR
(	SIMBOLO
color	IDENTIFICADOR
0	ENTERO
)	SIMBOLO
;	SIMBOLO
printf	IDENTIFICADOR
(	SIMBOLO
%	OPERADOR
c	IDENTIFICADOR
,	SIMBOLO
187	ENTERO
)	SIMBOLO
;	SIMBOLO
}	SIMBOLO
else	RESERVADAS
if	RESERVADAS
(	SIMBOLO
mapa	IDENTIFICADOR
j	IDENTIFICADOR
i	IDENTIFICADOR
==	OPERADOR
C	IDENTIFICADOR
)	SIMBOLO
{	SIMBOLO
setCColor	IDENTIFICADOR
(	SIMBOLO
color	IDENTIFICADOR
0	ENTERO
)	SIMBOLO
;	SIMBOLO
printf	IDENTIFICADOR
(	SIMBOLO
%	OPERADOR
c	IDENTIFICADOR
,	SIMBOLO
188	ENTERO
)	SIMBOLO
;	SIMBOLO
}	SIMBOLO
else	RESERVADAS
if	RESERVADAS
(	SIMBOLO
mapa	IDENTIFICADOR
j	IDENTIFICADOR
i	IDENTIFICADOR
==	OPERADOR
D	IDENTIFICADOR
)	SIMBOLO
{	SIMBOLO
setCColor	IDENTIFICADOR
(	SIMBOLO
color	IDENTIFICADOR
0	ENTERO
)	SIMBOLO
;	SIMBOLO
printf	IDENTIFICADOR
(	SIMBOLO
%	OPERADOR
c	IDENTIFICADOR
,	SIMBOLO
200	ENTERO
)	SIMBOLO
;	SIMBOLO
}	SIMBOLO
}	SIMBOLO
}	SIMBOLO
}	SIMBOLO
void	IDENTIFICADOR
pacman	IDENTIFICADOR
(	SIMBOLO
int	RESERVADAS
x	IDENTIFICADOR
,	SIMBOLO
int	RESERVADAS
y	IDENTIFICADOR
)	SIMBOLO
{	SIMBOLO
setCColor	IDENTIFICADOR
(	SIMBOLO
color	IDENTIFICADOR
1	ENTERO
)	SIMBOLO
;	SIMBOLO
gotoxy	IDENTIFICADOR
(	SIMBOLO
x	IDENTIFICADOR
,	SIMBOLO
y	IDENTIFICADOR
)	SIMBOLO
;	SIMBOLO
printf	IDENTIFICADOR
(	SIMBOLO
%	OPERADOR
c	IDENTIFICADOR
,	SIMBOLO
2	ENTERO
)	SIMBOLO
;	SIMBOLO
}	SIMBOLO
void	IDENTIFICADOR
borrar_pacman	IDENTIFICADOR
(	SIMBOLO
int	RESERVADAS
x	IDENTIFICADOR
,	SIMBOLO
int	RESERVADAS
y	IDENTIFICADOR
)	SIMBOLO
{	SIMBOLO
gotoxy	IDENTIFICADOR
(	SIMBOLO
x	IDENTIFICADOR
,	SIMBOLO
y	IDENTIFICADOR
)	SIMBOLO
;	SIMBOLO
printf	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
;	SIMBOLO
if	RESERVADAS
(	SIMBOLO
mapa	IDENTIFICADOR
y	IDENTIFICADOR
x	IDENTIFICADOR
==	OPERADOR
)	SIMBOLO
{	SIMBOLO
mapa	IDENTIFICADOR
y	IDENTIFICADOR
x	IDENTIFICADOR
;	SIMBOLO
puntos	IDENTIFICADOR
+	OPERADOR
5	ENTERO
;	SIMBOLO
}	SIMBOLO
}	SIMBOLO
void	IDENTIFICADOR
teclear	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
{	SIMBOLO
if	RESERVADAS
(	SIMBOLO
kbhit	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
)	SIMBOLO
{	SIMBOLO
tecla	IDENTIFICADOR
getch	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
;	SIMBOLO
switch	IDENTIFICADOR
(	SIMBOLO
tecla	IDENTIFICADOR
)	SIMBOLO
{	SIMBOLO
case	IDENTIFICADOR
ARRIBA	IDENTIFICADOR
dir	IDENTIFICADOR
0	ENTERO
;	SIMBOLO
break	IDENTIFICADOR
;	SIMBOLO
case	IDENTIFICADOR
ABAJO	IDENTIFICADOR
dir	IDENTIFICADOR
1	ENTERO
;	SIMBOLO
break	IDENTIFICADOR
;	SIMBOLO
case	IDENTIFICADOR
DERECHA	IDENTIFICADOR
dir	IDENTIFICADOR
2	ENTERO
;	SIMBOLO
break	IDENTIFICADOR
;	SIMBOLO
case	IDENTIFICADOR
IZQUIERDA	IDENTIFICADOR
dir	IDENTIFICADOR
3	ENTERO
;	SIMBOLO
break	IDENTIFICADOR
;	SIMBOLO
}	SIMBOLO
}	SIMBOLO
}	SIMBOLO
class	IDENTIFICADOR
fantasma	IDENTIFICADOR
{	SIMBOLO
int	RESERVADAS
fdir	IDENTIFICADOR
;	SIMBOLO
int	RESERVADAS
x	IDENTIFICADOR
,	SIMBOLO
y	IDENTIFICADOR
;	SIMBOLO
int	RESERVADAS
col	IDENTIFICADOR
;	SIMBOLO
public	IDENTIFICADOR
fantasma	IDENTIFICADOR
(	SIMBOLO
int	RESERVADAS
x	IDENTIFICADOR
,	SIMBOLO
int	RESERVADAS
y	IDENTIFICADOR
,	SIMBOLO
int	RESERVADAS
color	IDENTIFICADOR
)	SIMBOLO
;	SIMBOLO
void	IDENTIFICADOR
dibujar_fantasma	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
const	IDENTIFICADOR
;	SIMBOLO
void	IDENTIFICADOR
borrar_fantasma	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
const	IDENTIFICADOR
;	SIMBOLO
void	IDENTIFICADOR
mover_fantasma	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
;	SIMBOLO
void	IDENTIFICADOR
choque_pacman	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
;	SIMBOLO
}	SIMBOLO
;	SIMBOLO
fantasma	IDENTIFICADOR
fantasma	IDENTIFICADOR
(	SIMBOLO
int	RESERVADAS
x	IDENTIFICADOR
,	SIMBOLO
int	RESERVADAS
y	IDENTIFICADOR
,	SIMBOLO
int	RESERVADAS
color	IDENTIFICADOR
)	SIMBOLO
{	SIMBOLO
x	IDENTIFICADOR
x	IDENTIFICADOR
;	SIMBOLO
y	IDENTIFICADOR
y	IDENTIFICADOR
;	SIMBOLO
col	IDENTIFICADOR
color	IDENTIFICADOR
;	SIMBOLO
fdir	IDENTIFICADOR
rand	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
%	OPERADOR
4	ENTERO
;	SIMBOLO
}	SIMBOLO
void	IDENTIFICADOR
fantasma	IDENTIFICADOR
dibujar_fantasma	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
const	IDENTIFICADOR
{	SIMBOLO
setCColor	IDENTIFICADOR
(	SIMBOLO
color	IDENTIFICADOR
col	IDENTIFICADOR
)	SIMBOLO
;	SIMBOLO
gotoxy	IDENTIFICADOR
(	SIMBOLO
x	IDENTIFICADOR
,	SIMBOLO
y	IDENTIFICADOR
)	SIMBOLO
;	SIMBOLO
printf	IDENTIFICADOR
(	SIMBOLO
%	OPERADOR
c	IDENTIFICADOR
,	SIMBOLO
6	ENTERO
)	SIMBOLO
;	SIMBOLO
}	SIMBOLO
void	IDENTIFICADOR
fantasma	IDENTIFICADOR
borrar_fantasma	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
const	IDENTIFICADOR
{	SIMBOLO
gotoxy	IDENTIFICADOR
(	SIMBOLO
x	IDENTIFICADOR
,	SIMBOLO
y	IDENTIFICADOR
)	SIMBOLO
;	SIMBOLO
printf	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
;	SIMBOLO
}	SIMBOLO
void	IDENTIFICADOR
fantasma	IDENTIFICADOR
choque_pacman	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
{	SIMBOLO
if	RESERVADAS
(	SIMBOLO
y	IDENTIFICADOR
==	OPERADOR
y	IDENTIFICADOR
x	IDENTIFICADOR
==	OPERADOR
x	IDENTIFICADOR
(	SIMBOLO
fdir	IDENTIFICADOR
==	OPERADOR
0	ENTERO
dir	IDENTIFICADOR
==	OPERADOR
1	ENTERO
fdir	IDENTIFICADOR
==	OPERADOR
1	ENTERO
dir	IDENTIFICADOR
==	OPERADOR
0	ENTERO
fdir	IDENTIFICADOR
==	OPERADOR
2	ENTERO
dir	IDENTIFICADOR
==	OPERADOR
3	ENTERO
fdir	IDENTIFICADOR
==	OPERADOR
3	ENTERO
dir	IDENTIFICADOR
==	OPERADOR
2	ENTERO
)	SIMBOLO
(	SIMBOLO
y	IDENTIFICADOR
==	OPERADOR
anteriorpy	IDENTIFICADOR
x	IDENTIFICADOR
==	OPERADOR
anteriorpx	IDENTIFICADOR
)	SIMBOLO
)	SIMBOLO
{	SIMBOLO
x	IDENTIFICADOR
39	ENTERO
;	SIMBOLO
y	IDENTIFICADOR
22	ENTERO
;	SIMBOLO
dir	IDENTIFICADOR
4	ENTERO
;	SIMBOLO
vidas	IDENTIFICADOR
--	OPERADOR
;	SIMBOLO
}	SIMBOLO
}	SIMBOLO
void	IDENTIFICADOR
fantasma	IDENTIFICADOR
mover_fantasma	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
{	SIMBOLO
borrar_fantasma	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
;	SIMBOLO
choque_pacman	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
;	SIMBOLO
int	RESERVADAS
bolx	IDENTIFICADOR
x	IDENTIFICADOR
,	SIMBOLO
boly	IDENTIFICADOR
y	IDENTIFICADOR
;	SIMBOLO
if	RESERVADAS
(	SIMBOLO
mapa	IDENTIFICADOR
y	IDENTIFICADOR
x	IDENTIFICADOR
==	OPERADOR
)	SIMBOLO
{	SIMBOLO
fdir	IDENTIFICADOR
rand	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
%	OPERADOR
4	ENTERO
;	SIMBOLO
}	SIMBOLO
if	RESERVADAS
(	SIMBOLO
mapa	IDENTIFICADOR
y	IDENTIFICADOR
x	IDENTIFICADOR
==	OPERADOR
*	OPERADOR
)	SIMBOLO
{	SIMBOLO
fdir	IDENTIFICADOR
0	ENTERO
;	SIMBOLO
}	SIMBOLO
if	RESERVADAS
(	SIMBOLO
fdir	IDENTIFICADOR
==	OPERADOR
2	ENTERO
)	SIMBOLO
{	SIMBOLO
if	RESERVADAS
(	SIMBOLO
mapa	IDENTIFICADOR
y	IDENTIFICADOR
x	IDENTIFICADOR
+1	ENTERO
!=	OPERADOR
X	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
x	IDENTIFICADOR
+1	ENTERO
!=	OPERADOR
A	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
x	IDENTIFICADOR
+1	ENTERO
!=	OPERADOR
Y	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
x	IDENTIFICADOR
+1	ENTERO
!=	OPERADOR
B	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
x	IDENTIFICADOR
+1	ENTERO
!=	OPERADOR
C	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
x	IDENTIFICADOR
+1	ENTERO
!=	OPERADOR
D	IDENTIFICADOR
)	SIMBOLO
x	IDENTIFICADOR
++	OPERADOR
;	SIMBOLO
else	RESERVADAS
fdir	IDENTIFICADOR
rand	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
%	OPERADOR
4	ENTERO
;	SIMBOLO
}	SIMBOLO
if	RESERVADAS
(	SIMBOLO
fdir	IDENTIFICADOR
==	OPERADOR
3	ENTERO
)	SIMBOLO
{	SIMBOLO
if	RESERVADAS
(	SIMBOLO
mapa	IDENTIFICADOR
y	IDENTIFICADOR
x	IDENTIFICADOR
-1	ENTERO
!=	OPERADOR
X	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
x	IDENTIFICADOR
-1	ENTERO
!=	OPERADOR
A	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
x	IDENTIFICADOR
-1	ENTERO
!=	OPERADOR
Y	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
x	IDENTIFICADOR
-1	ENTERO
!=	OPERADOR
B	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
x	IDENTIFICADOR
-1	ENTERO
!=	OPERADOR
C	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
x	IDENTIFICADOR
-1	ENTERO
!=	OPERADOR
D	IDENTIFICADOR
)	SIMBOLO
x	IDENTIFICADOR
--	OPERADOR
;	SIMBOLO
else	RESERVADAS
fdir	IDENTIFICADOR
rand	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
%	OPERADOR
4	ENTERO
;	SIMBOLO
}	SIMBOLO
if	RESERVADAS
(	SIMBOLO
fdir	IDENTIFICADOR
==	OPERADOR
0	ENTERO
)	SIMBOLO
{	SIMBOLO
if	RESERVADAS
(	SIMBOLO
mapa	IDENTIFICADOR
y	IDENTIFICADOR
-1	ENTERO
x	IDENTIFICADOR
!=	OPERADOR
X	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
-1	ENTERO
x	IDENTIFICADOR
!=	OPERADOR
A	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
-1	ENTERO
x	IDENTIFICADOR
!=	OPERADOR
Y	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
-1	ENTERO
x	IDENTIFICADOR
!=	OPERADOR
B	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
-1	ENTERO
x	IDENTIFICADOR
!=	OPERADOR
C	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
-1	ENTERO
x	IDENTIFICADOR
!=	OPERADOR
D	IDENTIFICADOR
)	SIMBOLO
y	IDENTIFICADOR
--	OPERADOR
;	SIMBOLO
else	RESERVADAS
fdir	IDENTIFICADOR
rand	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
%	OPERADOR
4	ENTERO
;	SIMBOLO
}	SIMBOLO
if	RESERVADAS
(	SIMBOLO
fdir	IDENTIFICADOR
==	OPERADOR
1	ENTERO
)	SIMBOLO
{	SIMBOLO
if	RESERVADAS
(	SIMBOLO
mapa	IDENTIFICADOR
y	IDENTIFICADOR
+1	ENTERO
x	IDENTIFICADOR
!=	OPERADOR
X	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
+1	ENTERO
x	IDENTIFICADOR
!=	OPERADOR
A	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
+1	ENTERO
x	IDENTIFICADOR
!=	OPERADOR
Y	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
+1	ENTERO
x	IDENTIFICADOR
!=	OPERADOR
B	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
+1	ENTERO
x	IDENTIFICADOR
!=	OPERADOR
C	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
+1	ENTERO
x	IDENTIFICADOR
!=	OPERADOR
D	IDENTIFICADOR
)	SIMBOLO
y	IDENTIFICADOR
++	OPERADOR
;	SIMBOLO
else	RESERVADAS
fdir	IDENTIFICADOR
rand	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
%	OPERADOR
4	ENTERO
;	SIMBOLO
}	SIMBOLO
if	RESERVADAS
(	SIMBOLO
mapa	IDENTIFICADOR
boly	IDENTIFICADOR
bolx	IDENTIFICADOR
==	OPERADOR
)	SIMBOLO
{	SIMBOLO
setCColor	IDENTIFICADOR
(	SIMBOLO
color	IDENTIFICADOR
1	ENTERO
)	SIMBOLO
;	SIMBOLO
gotoxy	IDENTIFICADOR
(	SIMBOLO
bolx	IDENTIFICADOR
,	SIMBOLO
boly	IDENTIFICADOR
)	SIMBOLO
;	SIMBOLO
printf	IDENTIFICADOR
(	SIMBOLO
%	OPERADOR
c	IDENTIFICADOR
,	SIMBOLO
250	ENTERO
)	SIMBOLO
;	SIMBOLO
}	SIMBOLO
if	RESERVADAS
(	SIMBOLO
x	IDENTIFICADOR
<=	OPERADOR
17	ENTERO
)	SIMBOLO
x	IDENTIFICADOR
61	ENTERO
;	SIMBOLO
else	RESERVADAS
if	RESERVADAS
(	SIMBOLO
x	IDENTIFICADOR
>=	OPERADOR
62	ENTERO
)	SIMBOLO
x	IDENTIFICADOR
18	ENTERO
;	SIMBOLO
dibujar_fantasma	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
;	SIMBOLO
}	SIMBOLO
void	IDENTIFICADOR
marcador	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
{	SIMBOLO
gotoxy	IDENTIFICADOR
(	SIMBOLO
5	ENTERO
,	SIMBOLO
4	ENTERO
)	SIMBOLO
;	SIMBOLO
printf	IDENTIFICADOR
(	SIMBOLO
PUNTOS	IDENTIFICADOR
)	SIMBOLO
;	SIMBOLO
gotoxy	IDENTIFICADOR
(	SIMBOLO
5	ENTERO
,	SIMBOLO
6	ENTERO
)	SIMBOLO
;	SIMBOLO
printf	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
;	SIMBOLO
setCColor	IDENTIFICADOR
(	SIMBOLO
color	IDENTIFICADOR
6	ENTERO
)	SIMBOLO
;	SIMBOLO
gotoxy	IDENTIFICADOR
(	SIMBOLO
5	ENTERO
,	SIMBOLO
6	ENTERO
)	SIMBOLO
;	SIMBOLO
printf	IDENTIFICADOR
(	SIMBOLO
%	OPERADOR
ld	IDENTIFICADOR
,	SIMBOLO
puntos	IDENTIFICADOR
)	SIMBOLO
;	SIMBOLO
setCColor	IDENTIFICADOR
(	SIMBOLO
color	IDENTIFICADOR
1	ENTERO
)	SIMBOLO
;	SIMBOLO
gotoxy	IDENTIFICADOR
(	SIMBOLO
5	ENTERO
,	SIMBOLO
25	ENTERO
)	SIMBOLO
;	SIMBOLO
printf	IDENTIFICADOR
(	SIMBOLO
VIDAS	IDENTIFICADOR
)	SIMBOLO
;	SIMBOLO
for	IDENTIFICADOR
(	SIMBOLO
int	RESERVADAS
i	IDENTIFICADOR
0	ENTERO
;	SIMBOLO
i	IDENTIFICADOR
<=	OPERADOR
vidas	IDENTIFICADOR
;	SIMBOLO
i	IDENTIFICADOR
++	OPERADOR
)	SIMBOLO
{	SIMBOLO
gotoxy	IDENTIFICADOR
(	SIMBOLO
5	ENTERO
,	SIMBOLO
i	IDENTIFICADOR
+27	ENTERO
)	SIMBOLO
;	SIMBOLO
printf	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
;	SIMBOLO
}	SIMBOLO
for	IDENTIFICADOR
(	SIMBOLO
int	RESERVADAS
i	IDENTIFICADOR
0	ENTERO
;	SIMBOLO
i	IDENTIFICADOR
<	OPERADOR
vidas	IDENTIFICADOR
;	SIMBOLO
i	IDENTIFICADOR
++	OPERADOR
)	SIMBOLO
{	SIMBOLO
gotoxy	IDENTIFICADOR
(	SIMBOLO
5	ENTERO
,	SIMBOLO
i	IDENTIFICADOR
+27	ENTERO
)	SIMBOLO
;	SIMBOLO
printf	IDENTIFICADOR
(	SIMBOLO
%	OPERADOR
c	IDENTIFICADOR
,	SIMBOLO
2	ENTERO
)	SIMBOLO
;	SIMBOLO
}	SIMBOLO
setCColor	IDENTIFICADOR
(	SIMBOLO
color	IDENTIFICADOR
2	ENTERO
)	SIMBOLO
;	SIMBOLO
gotoxy	IDENTIFICADOR
(	SIMBOLO
70	ENTERO
,	SIMBOLO
27	ENTERO
)	SIMBOLO
;	SIMBOLO
printf	IDENTIFICADOR
(	SIMBOLO
%	OPERADOR
c	IDENTIFICADOR
,	SIMBOLO
169	ENTERO
)	SIMBOLO
;	SIMBOLO
}	SIMBOLO
int	RESERVADAS
main	RESERVADAS
(	SIMBOLO
)	SIMBOLO
{	SIMBOLO
fantasma	IDENTIFICADOR
A	IDENTIFICADOR
(	SIMBOLO
41	ENTERO
,	SIMBOLO
14	ENTERO
,	SIMBOLO
2	ENTERO
)	SIMBOLO
;	SIMBOLO
fantasma	IDENTIFICADOR
B	IDENTIFICADOR
(	SIMBOLO
43	ENTERO
,	SIMBOLO
14	ENTERO
,	SIMBOLO
3	ENTERO
)	SIMBOLO
;	SIMBOLO
fantasma	IDENTIFICADOR
C	IDENTIFICADOR
(	SIMBOLO
40	ENTERO
,	SIMBOLO
14	ENTERO
,	SIMBOLO
4	ENTERO
)	SIMBOLO
;	SIMBOLO
fantasma	IDENTIFICADOR
D	IDENTIFICADOR
(	SIMBOLO
39	ENTERO
,	SIMBOLO
14	ENTERO
,	SIMBOLO
5	ENTERO
)	SIMBOLO
;	SIMBOLO
pintar_mapa	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
;	SIMBOLO
while	RESERVADAS
(	SIMBOLO
vidas	IDENTIFICADOR
>	OPERADOR
0	ENTERO
puntos	IDENTIFICADOR
<	OPERADOR
1950	ENTERO
)	SIMBOLO
{	SIMBOLO
marcador	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
;	SIMBOLO
borrar_pacman	IDENTIFICADOR
(	SIMBOLO
x	IDENTIFICADOR
,	SIMBOLO
y	IDENTIFICADOR
)	SIMBOLO
;	SIMBOLO
anteriorpx	IDENTIFICADOR
x	IDENTIFICADOR
;	SIMBOLO
anteriorpy	IDENTIFICADOR
y	IDENTIFICADOR
;	SIMBOLO
teclear	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
;	SIMBOLO
if	RESERVADAS
(	SIMBOLO
dir	IDENTIFICADOR
==	OPERADOR
0	ENTERO
mapa	IDENTIFICADOR
y	IDENTIFICADOR
-1	ENTERO
x	IDENTIFICADOR
!=	OPERADOR
X	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
-1	ENTERO
x	IDENTIFICADOR
!=	OPERADOR
A	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
-1	ENTERO
x	IDENTIFICADOR
!=	OPERADOR
Y	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
-1	ENTERO
x	IDENTIFICADOR
!=	OPERADOR
B	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
-1	ENTERO
x	IDENTIFICADOR
!=	OPERADOR
C	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
-1	ENTERO
x	IDENTIFICADOR
!=	OPERADOR
D	IDENTIFICADOR
)	SIMBOLO
y	IDENTIFICADOR
--	OPERADOR
;	SIMBOLO
else	RESERVADAS
if	RESERVADAS
(	SIMBOLO
dir	IDENTIFICADOR
==	OPERADOR
1	ENTERO
mapa	IDENTIFICADOR
y	IDENTIFICADOR
+1	ENTERO
x	IDENTIFICADOR
!=	OPERADOR
X	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
+1	ENTERO
x	IDENTIFICADOR
!=	OPERADOR
A	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
+1	ENTERO
x	IDENTIFICADOR
!=	OPERADOR
Y	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
+1	ENTERO
x	IDENTIFICADOR
!=	OPERADOR
B	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
+1	ENTERO
x	IDENTIFICADOR
!=	OPERADOR
C	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
+1	ENTERO
x	IDENTIFICADOR
!=	OPERADOR
D	IDENTIFICADOR
)	SIMBOLO
y	IDENTIFICADOR
++	OPERADOR
;	SIMBOLO
pacman	IDENTIFICADOR
(	SIMBOLO
x	IDENTIFICADOR
,	SIMBOLO
y	IDENTIFICADOR
)	SIMBOLO
;	SIMBOLO
Sleep	IDENTIFICADOR
(	SIMBOLO
55	ENTERO
)	SIMBOLO
;	SIMBOLO
borrar_pacman	IDENTIFICADOR
(	SIMBOLO
x	IDENTIFICADOR
,	SIMBOLO
y	IDENTIFICADOR
)	SIMBOLO
;	SIMBOLO
B	IDENTIFICADOR
choque_pacman	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
;	SIMBOLO
C	IDENTIFICADOR
choque_pacman	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
;	SIMBOLO
D	IDENTIFICADOR
choque_pacman	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
;	SIMBOLO
A	IDENTIFICADOR
choque_pacman	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
;	SIMBOLO
anteriorpx	IDENTIFICADOR
x	IDENTIFICADOR
;	SIMBOLO
anteriorpy	IDENTIFICADOR
y	IDENTIFICADOR
;	SIMBOLO
teclear	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
;	SIMBOLO
if	RESERVADAS
(	SIMBOLO
dir	IDENTIFICADOR
==	OPERADOR
2	ENTERO
mapa	IDENTIFICADOR
y	IDENTIFICADOR
x	IDENTIFICADOR
+1	ENTERO
!=	OPERADOR
X	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
x	IDENTIFICADOR
+1	ENTERO
!=	OPERADOR
A	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
x	IDENTIFICADOR
+1	ENTERO
!=	OPERADOR
Y	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
x	IDENTIFICADOR
+1	ENTERO
!=	OPERADOR
B	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
x	IDENTIFICADOR
+1	ENTERO
!=	OPERADOR
C	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
x	IDENTIFICADOR
+1	ENTERO
!=	OPERADOR
D	IDENTIFICADOR
)	SIMBOLO
x	IDENTIFICADOR
++	OPERADOR
;	SIMBOLO
else	RESERVADAS
if	RESERVADAS
(	SIMBOLO
dir	IDENTIFICADOR
==	OPERADOR
3	ENTERO
mapa	IDENTIFICADOR
y	IDENTIFICADOR
x	IDENTIFICADOR
-1	ENTERO
!=	OPERADOR
X	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
x	IDENTIFICADOR
-1	ENTERO
!=	OPERADOR
A	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
x	IDENTIFICADOR
-1	ENTERO
!=	OPERADOR
Y	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
x	IDENTIFICADOR
-1	ENTERO
!=	OPERADOR
B	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
x	IDENTIFICADOR
-1	ENTERO
!=	OPERADOR
C	IDENTIFICADOR
mapa	IDENTIFICADOR
y	IDENTIFICADOR
x	IDENTIFICADOR
-1	ENTERO
!=	OPERADOR
D	IDENTIFICADOR
)	SIMBOLO
x	IDENTIFICADOR
--	OPERADOR
;	SIMBOLO
A	IDENTIFICADOR
mover_fantasma	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
;	SIMBOLO
B	IDENTIFICADOR
mover_fantasma	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
;	SIMBOLO
C	IDENTIFICADOR
mover_fantasma	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
;	SIMBOLO
D	IDENTIFICADOR
mover_fantasma	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
;	SIMBOLO
pacman	IDENTIFICADOR
(	SIMBOLO
x	IDENTIFICADOR
,	SIMBOLO
y	IDENTIFICADOR
)	SIMBOLO
;	SIMBOLO
Sleep	IDENTIFICADOR
(	SIMBOLO
55	ENTERO
)	SIMBOLO
;	SIMBOLO
if	RESERVADAS
(	SIMBOLO
x	IDENTIFICADOR
<	OPERADOR
17	ENTERO
)	SIMBOLO
{	SIMBOLO
borrar_pacman	IDENTIFICADOR
(	SIMBOLO
x	IDENTIFICADOR
,	SIMBOLO
y	IDENTIFICADOR
)	SIMBOLO
;	SIMBOLO
x	IDENTIFICADOR
61	ENTERO
;	SIMBOLO
}	SIMBOLO
else	RESERVADAS
if	RESERVADAS
(	SIMBOLO
x	IDENTIFICADOR
>	OPERADOR
62	ENTERO
)	SIMBOLO
{	SIMBOLO
borrar_pacman	IDENTIFICADOR
(	SIMBOLO
x	IDENTIFICADOR
,	SIMBOLO
y	IDENTIFICADOR
)	SIMBOLO
;	SIMBOLO
x	IDENTIFICADOR
18	ENTERO
;	SIMBOLO
}	SIMBOLO
}	SIMBOLO
for	IDENTIFICADOR
(	SIMBOLO
int	RESERVADAS
i	IDENTIFICADOR
0	ENTERO
;	SIMBOLO
i	IDENTIFICADOR
<=	OPERADOR
vidas	IDENTIFICADOR
;	SIMBOLO
i	IDENTIFICADOR
++	OPERADOR
)	SIMBOLO
{	SIMBOLO
gotoxy	IDENTIFICADOR
(	SIMBOLO
5	ENTERO
,	SIMBOLO
i	IDENTIFICADOR
+27	ENTERO
)	SIMBOLO
;	SIMBOLO
printf	IDENTIFICADOR
(	SIMBOLO
)	SIMBOLO
;	SIMBOLO
}	SIMBOLO
system	IDENTIFICADOR
(	SIMBOLO
pause	IDENTIFICADOR
>	OPERADOR
NULL	IDENTIFICADOR
)	SIMBOLO
;	SIMBOLO
return	IDENTIFICADOR
0	ENTERO
;	SIMBOLO
}	SIMBOLO
