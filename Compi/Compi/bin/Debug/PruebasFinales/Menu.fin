ï	IDENTIFICADOR
main	RESERVADAS
{	SIMBOLO
int	RESERVADAS
x	IDENTIFICADOR
,	SIMBOLO
y	IDENTIFICADOR
,	SIMBOLO
z	IDENTIFICADOR
,	SIMBOLO
a	IDENTIFICADOR
;	SIMBOLO
real	RESERVADAS
r	IDENTIFICADOR
;	SIMBOLO
cin	RESERVADAS
x	IDENTIFICADOR
;	SIMBOLO
cin	RESERVADAS
y	IDENTIFICADOR
;	SIMBOLO
cin	RESERVADAS
z	IDENTIFICADOR
;	SIMBOLO
if	RESERVADAS
(	SIMBOLO
z	IDENTIFICADOR
==	OPERADOR
1	ENTERO
)	SIMBOLO
then	RESERVADAS
{	SIMBOLO
a	IDENTIFICADOR
:=	OPERADOR
x	IDENTIFICADOR
+	OPERADOR
y	IDENTIFICADOR
;	SIMBOLO
cout	RESERVADAS
a	IDENTIFICADOR
;	SIMBOLO
}	SIMBOLO
else	RESERVADAS
if	RESERVADAS
(	SIMBOLO
z	IDENTIFICADOR
==	OPERADOR
2	ENTERO
)	SIMBOLO
then	RESERVADAS
{	SIMBOLO
a	IDENTIFICADOR
:=	OPERADOR
x	IDENTIFICADOR
-	OPERADOR
y	IDENTIFICADOR
;	SIMBOLO
cout	RESERVADAS
a	IDENTIFICADOR
;	SIMBOLO
}	SIMBOLO
else	RESERVADAS
if	RESERVADAS
(	SIMBOLO
z	IDENTIFICADOR
==	OPERADOR
3	ENTERO
)	SIMBOLO
then	RESERVADAS
{	SIMBOLO
a	IDENTIFICADOR
:=	OPERADOR
x	IDENTIFICADOR
*	OPERADOR
y	IDENTIFICADOR
;	SIMBOLO
cout	RESERVADAS
a	IDENTIFICADOR
;	SIMBOLO
}	SIMBOLO
else	RESERVADAS
if	RESERVADAS
(	SIMBOLO
z	IDENTIFICADOR
==	OPERADOR
4	ENTERO
)	SIMBOLO
then	RESERVADAS
{	SIMBOLO
while	RESERVADAS
(	SIMBOLO
y	IDENTIFICADOR
<	OPERADOR
0	ENTERO
)	SIMBOLO
{	SIMBOLO
cin	RESERVADAS
y	IDENTIFICADOR
;	SIMBOLO
}	SIMBOLO
a	IDENTIFICADOR
:=	OPERADOR
x	IDENTIFICADOR
/	OPERADOR
y	IDENTIFICADOR
;	SIMBOLO
cout	RESERVADAS
a	IDENTIFICADOR
;	SIMBOLO
}	SIMBOLO
while	RESERVADAS
(	SIMBOLO
z	IDENTIFICADOR
==	OPERADOR
5	ENTERO
)	SIMBOLO
{	SIMBOLO
break	RESERVADAS
;	SIMBOLO
}	SIMBOLO
}	SIMBOLO
