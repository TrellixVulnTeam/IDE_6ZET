ï	IDENTIFICADOR	1	1
main	RESERVADAS	1	7
{	SIMBOLO	2	1
int	RESERVADAS	3	3
x	IDENTIFICADOR	3	5
,	SIMBOLO	3	6
y	IDENTIFICADOR	3	7
,	SIMBOLO	3	8
z	IDENTIFICADOR	3	9
,	SIMBOLO	3	10
kk	IDENTIFICADOR	3	12
,	SIMBOLO	3	13
whiteSnow	IDENTIFICADOR	3	22
,	SIMBOLO	3	23
puzzle	IDENTIFICADOR	3	29
;	SIMBOLO	3	30
real	RESERVADAS	4	4
x	IDENTIFICADOR	4	6
,	SIMBOLO	4	7
a	IDENTIFICADOR	4	8
,	SIMBOLO	4	9
b	IDENTIFICADOR	4	10
,	SIMBOLO	4	11
c	IDENTIFICADOR	4	12
,	SIMBOLO	4	13
c	IDENTIFICADOR	4	14
,	SIMBOLO	4	15
pp	IDENTIFICADOR	4	17
;	SIMBOLO	4	18
y	IDENTIFICADOR	5	1
:=	OPERADOR	5	3
8.0	REAL	5	6
;	SIMBOLO	5	7
pp	IDENTIFICADOR	6	2
:=	OPERADOR	6	4
9.5	REAL	6	7
;	SIMBOLO	6	8
c	IDENTIFICADOR	7	1
:=	OPERADOR	7	3
15.0	REAL	7	7
;	SIMBOLO	7	8
b	IDENTIFICADOR	8	1
:=	OPERADOR	8	3
7	ENTERO	8	4
;	SIMBOLO	8	5
cout	RESERVADAS	9	4
5	ENTERO	9	6
!=	OPERADOR	9	8
7	ENTERO	9	9
;	SIMBOLO	9	10
suma	IDENTIFICADOR	10	4
:=	OPERADOR	10	6
9	ENTERO	10	7
;	SIMBOLO	10	8
a	IDENTIFICADOR	11	1
:=	OPERADOR	11	3
a	IDENTIFICADOR	11	3
+	OPERADOR	11	3
1	ENTERO	11	3
;	SIMBOLO	11	4
b	IDENTIFICADOR	12	1
:=	OPERADOR	12	3
b	IDENTIFICADOR	12	3
-	OPERADOR	12	3
1	ENTERO	12	3
;	SIMBOLO	12	4
x	IDENTIFICADOR	13	1
:=	OPERADOR	13	3
23	ENTERO	13	5
;	SIMBOLO	13	6
y	IDENTIFICADOR	14	1
:=	OPERADOR	14	3
2	ENTERO	14	4
+	OPERADOR	14	5
3	ENTERO	14	6
-	OPERADOR	14	7
1	ENTERO	14	8
;	SIMBOLO	14	9
z	IDENTIFICADOR	15	1
:=	OPERADOR	15	3
y	IDENTIFICADOR	15	4
+	OPERADOR	15	5
7	ENTERO	15	6
;	SIMBOLO	15	7
x	IDENTIFICADOR	16	1
:=	OPERADOR	16	3
(	SIMBOLO	16	4
5	ENTERO	16	5
-	OPERADOR	16	6
3	ENTERO	16	7
)	SIMBOLO	16	8
*	OPERADOR	16	9
(	SIMBOLO	16	10
8	ENTERO	16	11
/	OPERADOR	16	12
0	ENTERO	16	13
)	SIMBOLO	16	14
;	SIMBOLO	16	15
y	IDENTIFICADOR	17	1
:=	OPERADOR	17	3
5	ENTERO	17	4
+	OPERADOR	17	5
3	ENTERO	17	6
-	OPERADOR	17	7
2	ENTERO	17	8
*	OPERADOR	17	9
4	ENTERO	17	10
/	OPERADOR	17	11
7	ENTERO	17	12
-	OPERADOR	17	13
9	ENTERO	17	14
;	SIMBOLO	17	15
z	IDENTIFICADOR	18	1
:=	OPERADOR	18	3
8	ENTERO	18	4
/	OPERADOR	18	5
2	ENTERO	18	6
+	OPERADOR	18	7
15	ENTERO	18	9
*	OPERADOR	18	10
4	ENTERO	18	11
;	SIMBOLO	18	12
y	IDENTIFICADOR	19	1
:=	OPERADOR	19	3
14.54	REAL	19	8
;	SIMBOLO	19	9
a	IDENTIFICADOR	20	1
:=	OPERADOR	20	3
24.0	REAL	20	7
+	OPERADOR	20	8
4	ENTERO	20	9
-	OPERADOR	20	10
1	ENTERO	20	11
*	OPERADOR	20	12
3	ENTERO	20	13
/	OPERADOR	20	14
2	ENTERO	20	15
+	OPERADOR	20	16
34	ENTERO	20	18
-	OPERADOR	20	19
1	ENTERO	20	20
;	SIMBOLO	20	21
cin	RESERVADAS	21	3
a	IDENTIFICADOR	21	5
;	SIMBOLO	21	6
cout	RESERVADAS	22	4
a	IDENTIFICADOR	22	6
;	SIMBOLO	22	7
cout	RESERVADAS	23	4
a	IDENTIFICADOR	23	6
+	OPERADOR	23	7
4	ENTERO	23	8
;	SIMBOLO	23	9
a	IDENTIFICADOR	24	1
:=	OPERADOR	24	3
7	ENTERO	24	4
;	SIMBOLO	24	5
a	IDENTIFICADOR	25	1
:=	OPERADOR	25	3
z	IDENTIFICADOR	25	4
*	OPERADOR	25	5
x	IDENTIFICADOR	25	6
;	SIMBOLO	25	7
cout	RESERVADAS	26	4
a	IDENTIFICADOR	26	6
>	OPERADOR	26	7
4	ENTERO	26	8
;	SIMBOLO	26	9
if	RESERVADAS	27	2
(	SIMBOLO	27	3
x	IDENTIFICADOR	27	4
+	OPERADOR	27	5
4	ENTERO	27	6
>	OPERADOR	27	7
a	IDENTIFICADOR	27	8
)	SIMBOLO	27	9
then	RESERVADAS	27	14
{	SIMBOLO	27	15
a	IDENTIFICADOR	28	1
:=	OPERADOR	28	3
a	IDENTIFICADOR	28	4
+	OPERADOR	28	5
3	ENTERO	28	6
;	SIMBOLO	28	7
}	SIMBOLO	29	1
if	RESERVADAS	30	2
(	SIMBOLO	30	4
2	ENTERO	30	5
<	OPERADOR	30	6
a	IDENTIFICADOR	30	7
)	SIMBOLO	30	8
then	RESERVADAS	30	13
{	SIMBOLO	30	14
y	IDENTIFICADOR	31	5
:=	OPERADOR	31	7
a	IDENTIFICADOR	31	8
+	OPERADOR	31	9
3	ENTERO	31	10
;	SIMBOLO	31	11
}	SIMBOLO	32	5
else	RESERVADAS	33	8
{	SIMBOLO	34	5
if	RESERVADAS	35	7
(	SIMBOLO	35	8
4	ENTERO	35	9
>	OPERADOR	35	11
2	ENTERO	35	12
)	SIMBOLO	35	13
then	RESERVADAS	35	18
{	SIMBOLO	36	6
b	IDENTIFICADOR	37	2
:=	OPERADOR	37	4
3.2	REAL	37	7
;	SIMBOLO	37	8
}	SIMBOLO	38	2
else	RESERVADAS	39	11
{	SIMBOLO	40	8
b	IDENTIFICADOR	41	9
:=	OPERADOR	41	11
5.0	REAL	41	14
;	SIMBOLO	41	15
d	IDENTIFICADOR	42	6
:=	OPERADOR	42	8
a	IDENTIFICADOR	42	9
+	OPERADOR	42	10
b	IDENTIFICADOR	42	11
+	OPERADOR	42	12
c	IDENTIFICADOR	42	13
*	OPERADOR	42	14
5	ENTERO	42	15
;	SIMBOLO	42	16
b	IDENTIFICADOR	43	9
:=	OPERADOR	43	11
3.0	REAL	43	14
;	SIMBOLO	43	15
}	SIMBOLO	44	8
y	IDENTIFICADOR	45	4
:=	OPERADOR	45	6
y	IDENTIFICADOR	45	7
+	OPERADOR	45	8
1	ENTERO	45	9
;	SIMBOLO	45	10
}	SIMBOLO	46	1
a	IDENTIFICADOR	47	1
:=	OPERADOR	47	3
a	IDENTIFICADOR	47	3
+	OPERADOR	47	3
1	ENTERO	47	3
;	SIMBOLO	47	4
repeat	RESERVADAS	48	6
{	SIMBOLO	48	7
y	IDENTIFICADOR	49	3
:=	OPERADOR	49	5
(	SIMBOLO	49	6
y	IDENTIFICADOR	49	7
+	OPERADOR	49	8
1	ENTERO	49	9
)	SIMBOLO	49	10
*	OPERADOR	49	11
2	ENTERO	49	12
+	OPERADOR	49	13
1	ENTERO	49	14
;	SIMBOLO	49	15
if	RESERVADAS	50	4
(	SIMBOLO	50	5
a	IDENTIFICADOR	50	6
==	OPERADOR	50	8
b	IDENTIFICADOR	50	9
)	SIMBOLO	50	10
then	RESERVADAS	50	15
{	SIMBOLO	51	3
a	IDENTIFICADOR	52	6
:=	OPERADOR	52	8
a	IDENTIFICADOR	52	9
+	OPERADOR	52	10
1	ENTERO	52	11
;	SIMBOLO	52	12
}	SIMBOLO	53	3
else	RESERVADAS	54	6
{	SIMBOLO	55	3
b	IDENTIFICADOR	56	6
:=	OPERADOR	56	8
b	IDENTIFICADOR	56	9
+	OPERADOR	56	10
1	ENTERO	56	11
;	SIMBOLO	56	12
}	SIMBOLO	57	3
}	SIMBOLO	58	1
until	RESERVADAS	58	6
(	SIMBOLO	58	7
y	IDENTIFICADOR	58	8
==	OPERADOR	58	10
5	ENTERO	58	11
)	SIMBOLO	58	12
;	SIMBOLO	58	13
while	RESERVADAS	59	5
(	SIMBOLO	59	6
y	IDENTIFICADOR	59	7
==	OPERADOR	59	9
0	ENTERO	59	10
)	SIMBOLO	59	11
{	SIMBOLO	59	12
cin	RESERVADAS	60	5
x	IDENTIFICADOR	60	7
;	SIMBOLO	60	8
}	SIMBOLO	61	1
