main	RESERVADAS
{	SIMBOLO
int	RESERVADAS
x	IDENTIFICADOR
,	SIMBOLO
y	IDENTIFICADOR
,	SIMBOLO
z	IDENTIFICADOR
,	SIMBOLO
d	IDENTIFICADOR
;	SIMBOLO
real	RESERVADAS
a	IDENTIFICADOR
,	SIMBOLO
b	IDENTIFICADOR
,	SIMBOLO
c	IDENTIFICADOR
;	SIMBOLO
x	IDENTIFICADOR
:=	OPERADOR
23	ENTERO
;	SIMBOLO
y	IDENTIFICADOR
:=	OPERADOR
2	ENTERO
+	OPERADOR
3	ENTERO
-	OPERADOR
1	ENTERO
;	SIMBOLO
z	IDENTIFICADOR
:=	OPERADOR
y	IDENTIFICADOR
+	OPERADOR
7	ENTERO
;	SIMBOLO
x	IDENTIFICADOR
:=	OPERADOR
(	SIMBOLO
5	ENTERO
-	OPERADOR
3	ENTERO
)	SIMBOLO
*	OPERADOR
(	SIMBOLO
8	ENTERO
/	OPERADOR
2	ENTERO
)	SIMBOLO
;	SIMBOLO
y	IDENTIFICADOR
:=	OPERADOR
5	ENTERO
+	OPERADOR
3	ENTERO
-	OPERADOR
2	ENTERO
*	OPERADOR
4	ENTERO
/	OPERADOR
7	ENTERO
-	OPERADOR
9	ENTERO
;	SIMBOLO
z	IDENTIFICADOR
:=	OPERADOR
8	ENTERO
/	OPERADOR
2	ENTERO
+	OPERADOR
15	ENTERO
*	OPERADOR
4	ENTERO
;	SIMBOLO
y	IDENTIFICADOR
:=	OPERADOR
14.54	REAL
;	SIMBOLO
a	IDENTIFICADOR
:=	OPERADOR
24.0	REAL
+	OPERADOR
4	ENTERO
-	OPERADOR
1	ENTERO
*	OPERADOR
3	ENTERO
/	OPERADOR
2	ENTERO
+	OPERADOR
34	ENTERO
-	OPERADOR
1	ENTERO
;	SIMBOLO
if	RESERVADAS
(	SIMBOLO
2	ENTERO
>	OPERADOR
3	ENTERO
)	SIMBOLO
then	RESERVADAS
{	SIMBOLO
y	IDENTIFICADOR
:=	OPERADOR
a	IDENTIFICADOR
+	OPERADOR
3	ENTERO
;	SIMBOLO
}	SIMBOLO
else	RESERVADAS
{	SIMBOLO
if	RESERVADAS
(	SIMBOLO
4	ENTERO
>	OPERADOR
2	ENTERO
)	SIMBOLO
then	RESERVADAS
{	SIMBOLO
b	IDENTIFICADOR
:=	OPERADOR
3.2	REAL
;	SIMBOLO
}	SIMBOLO
else	RESERVADAS
{	SIMBOLO
b	IDENTIFICADOR
:=	OPERADOR
5.0	REAL
;	SIMBOLO
}	SIMBOLO
y	IDENTIFICADOR
:=	OPERADOR
y	IDENTIFICADOR
+	OPERADOR
1	ENTERO
;	SIMBOLO
}	SIMBOLO
a	IDENTIFICADOR
;	SIMBOLO
b	IDENTIFICADOR
;	SIMBOLO
repeat	RESERVADAS
{	SIMBOLO
y	IDENTIFICADOR
:=	OPERADOR
(	SIMBOLO
y	IDENTIFICADOR
+	OPERADOR
1	ENTERO
)	SIMBOLO
*	OPERADOR
2	ENTERO
+	OPERADOR
1	ENTERO
;	SIMBOLO
if	RESERVADAS
(	SIMBOLO
a	IDENTIFICADOR
==	OPERADOR
b	IDENTIFICADOR
)	SIMBOLO
then	RESERVADAS
{	SIMBOLO
a	IDENTIFICADOR
:=	OPERADOR
a	IDENTIFICADOR
+	OPERADOR
1	ENTERO
;	SIMBOLO
}	SIMBOLO
else	RESERVADAS
{	SIMBOLO
b	IDENTIFICADOR
:=	OPERADOR
b	IDENTIFICADOR
+	OPERADOR
1	ENTERO
;	SIMBOLO
}	SIMBOLO
}	SIMBOLO
until	RESERVADAS
(	SIMBOLO
y	IDENTIFICADOR
==	OPERADOR
5	ENTERO
)	SIMBOLO
;	SIMBOLO
while	RESERVADAS
(	SIMBOLO
y	IDENTIFICADOR
==	OPERADOR
0	ENTERO
)	SIMBOLO
{	SIMBOLO
cout	RESERVADAS
x	IDENTIFICADOR
;	SIMBOLO
cout	RESERVADAS
mas	IDENTIFICADOR
+	OPERADOR
5	ENTERO
*	OPERADOR
2	ENTERO
;	SIMBOLO
}	SIMBOLO
if	RESERVADAS
(	SIMBOLO
6	ENTERO
!=	OPERADOR
a	IDENTIFICADOR
)	SIMBOLO
then	RESERVADAS
{	SIMBOLO
a	IDENTIFICADOR
:=	OPERADOR
5	ENTERO
;	SIMBOLO
cin	RESERVADAS
x	IDENTIFICADOR
;	SIMBOLO
}	SIMBOLO
}	SIMBOLO
