ï	IDENTIFICADOR	1	1
main	RESERVADAS	1	7
{	SIMBOLO	2	1
repeat	RESERVADAS	5	6
{	SIMBOLO	5	7
y	IDENTIFICADOR	7	3
:=	OPERADOR	7	5
(	SIMBOLO	7	6
y	IDENTIFICADOR	7	7
+	OPERADOR	7	8
1	ENTERO	7	9
)	SIMBOLO	7	10
*	OPERADOR	7	11
2	ENTERO	7	12
+	OPERADOR	7	13
1	ENTERO	7	14
;	SIMBOLO	7	15
if	RESERVADAS	8	4
(	SIMBOLO	8	5
a	IDENTIFICADOR	8	6
==	OPERADOR	8	8
b	IDENTIFICADOR	8	9
then	RESERVADAS	8	14
{	SIMBOLO	9	3
a	IDENTIFICADOR	10	6
:=	OPERADOR	10	8
a	IDENTIFICADOR	10	9
+	OPERADOR	10	10
1	ENTERO	10	11
;	SIMBOLO	10	12
break	RESERVADAS	11	10
;	SIMBOLO	11	11
}	SIMBOLO	12	3
else	RESERVADAS	13	6
{	SIMBOLO	14	3
b	IDENTIFICADOR	15	6
:=	OPERADOR	15	8
b	IDENTIFICADOR	15	9
+	OPERADOR	15	10
1	ENTERO	15	11
;	SIMBOLO	15	12
}	SIMBOLO	17	3
}	SIMBOLO	20	1
until	RESERVADAS	20	6
(	SIMBOLO	20	7
y	IDENTIFICADOR	20	8
==	OPERADOR	20	10
5	ENTERO	20	11
)	SIMBOLO	20	12
;	SIMBOLO	20	13
while	RESERVADAS	22	5
y	IDENTIFICADOR	22	7
==	OPERADOR	22	9
0	ENTERO	22	10
)	SIMBOLO	22	11
{	SIMBOLO	22	12
write	IDENTIFICADOR	25	7
x	IDENTIFICADOR	25	9
;	SIMBOLO	25	10
do	RESERVADAS	26	4
writer	IDENTIFICADOR	27	10
mas	IDENTIFICADOR	27	14
+	OPERADOR	27	15
5	ENTERO	27	16
*	OPERADOR	27	17
/	OPERADOR	27	18
2	ENTERO	27	19
;	SIMBOLO	27	20
if	RESERVADAS	29	7
(	SIMBOLO	29	8
6	ENTERO	29	9
!=	OPERADOR	29	11
a	IDENTIFICADOR	29	12
)	SIMBOLO	31	1
then	RESERVADAS	33	4
{	SIMBOLO	33	5
a	IDENTIFICADOR	35	9
:=	OPERADOR	35	11
5	ENTERO	35	12
;	SIMBOLO	35	13
read	IDENTIFICADOR	36	12
x	IDENTIFICADOR	36	14
;	SIMBOLO	36	15
}	SIMBOLO	38	6
}	SIMBOLO	40	1
;	SIMBOLO	40	2
